

<!DOCTYPE html>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta charset="utf-8">
<style>
   body {
   background: #222;
   margin: auto;
   width: 880px;
   }
   .link {
   stroke: steelblue;
   stroke-opacity: 0.3;  
   }
   .node circle {
   fill: #ccc;
   stroke: #000;
   stroke-width: 1.5px;
   }
   .node text {
   pointer-events: none;
   font-family: san-serif;  
   font-weight: bold;
   fill: MediumTurquoise;  
   }
   .node:hover circle {
   fill: steelblue;
   }
   .cell {
   fill: none;
   pointer-events: all;
   }
</style>
<body>
   <script src="./lib/d3.v3.min.js"></script>
   <script>
      var width = 800,
          height = 550
      
      var svg = d3.select("body").append("svg")
          .attr("width", width)
          .attr("height", height);
      	
      var force = d3.layout.force()
          .gravity(1)
          .distance(100)
          .charge(-3000)
          .size([width, height]);
      	
      	
      var voronoi = d3.geom.voronoi()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .clipExtent([[0, 0], [width, height]]);
      
      //DATA
      var data=
      {"nodes":[
      {"name":"Historical data ","group":15, "size":"20px"},
      {"name":"Human ","group":10, "size":"30px sans-serif"},
      {"name":"Health records","group":7},
      {"name":"Family Records","group":4},
      {"name":"-","group":3},
      {"name":"-","group":5},
      {"name":"Environment","group":11, "size":"20px"},
      {"name":"Weather records","group":6},
      {"name":"Geographical records","group":4},
      {"name":"Communicable disease records","group":7},
      {"name":"-","group":5},
      {"name":"Logistics","group":13, "size":"20px"},
      {"name":"Antenna fault","group":7},
      {"name":"LOS faulty","group":6},
      {"name":"Server probem","group":4}
      ],
      "links":[
      {"source":1,"target":0,"value":5},
      {"source":2,"target":1,"value":2},
      {"source":3,"target":1,"value":2},
      {"source":4,"target":1,"value":2},
      {"source":7,"target":6,"value":2},
      {"source":8,"target":6,"value":2},
      {"source":9,"target":6,"value":2},
      {"source":10,"target":6,"value":2},
      {"source":11,"target":0,"value":5},
      {"source":12,"target":11,"value":2},
      {"source":13,"target":11,"value":2},
      {"source":14,"target":11,"value":2},
      {"source":7,"target":2,"value":2},
      ]
      }	
      update(data);	
      	
      function update(dataX){
      
        force
            .nodes(data.nodes)
            .links(data.links)
            .start();
      
        var link = svg.selectAll(".link")
            .data(data.links)
            .enter().append("line")
            .attr("class", "link")
      	  .attr("stroke-width",function(d) { return d.value; })	  
      	  ;
      
        var node = svg.selectAll(".node")
            .data(data.nodes)
            .enter().append("g")
            .attr("class", "node")
            .call(force.drag);
      	  
        var circle = node.append("circle")
            .attr("r", function(d) { return d.group; });	  
      
        var label = node.append("text")
            .attr("dy", ".35em")	
            .text(function(d) { return d.name; })
      	  .attr("font-size",function(d) { return d.size?d.size:"12px"; })
      	  ;
      
        var cell = node.append("path")
            .attr("class", "cell");
      
        force.on("tick", function() {
          cell
              .data(voronoi(dataX.nodes))
              .attr("d", function(d) { return d.length ? "M" + d.join("L") : null; });
      
          link
              .attr("x1", function(d) { return d.source.x; })
              .attr("y1", function(d) { return d.source.y; })
              .attr("x2", function(d) { return d.target.x; })
              .attr("y2", function(d) { return d.target.y; })
      		
      		;
      
          circle
              .attr("cx", function(d) { return d.x; })
              .attr("cy", function(d) { return d.y; });
      		
          label
              .attr("x", function(d) { return d.x + 8; })
              .attr("y", function(d) { return d.y; });
      
         
        });
      };
      
   </script>

